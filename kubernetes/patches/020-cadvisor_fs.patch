--- a/vendor/github.com/google/cadvisor/fs/fs.go
+++ b/vendor/github.com/google/cadvisor/fs/fs.go
@@ -524,8 +524,8 @@ func (self *RealFsInfo) GetDirFsDevice(d
 		return nil, fmt.Errorf("stat failed on %s with error: %s", dir, err)
 	}
 
-	major := major(buf.Dev)
-	minor := minor(buf.Dev)
+	major := major(uint64(buf.Dev))
+	minor := minor(uint64(buf.Dev))
 	for device, partition := range self.partitions {
 		if partition.major == major && partition.minor == minor {
 			return &DeviceInfo{device, major, minor}, nil
@@ -756,10 +756,10 @@ func getBtrfsMajorMinorIds(mount *mount.
 			return 0, 0, err
 		}
 
-		glog.V(4).Infof("btrfs dev major:minor %d:%d\n", int(major(buf.Dev)), int(minor(buf.Dev)))
-		glog.V(4).Infof("btrfs rdev major:minor %d:%d\n", int(major(buf.Rdev)), int(minor(buf.Rdev)))
+		glog.V(4).Infof("btrfs dev major:minor %d:%d\n", int(major(uint64(buf.Dev))), int(minor(uint64(buf.Dev))))
+		glog.V(4).Infof("btrfs rdev major:minor %d:%d\n", int(major(uint64(buf.Rdev))), int(minor(uint64(buf.Rdev))))
 
-		return int(major(buf.Dev)), int(minor(buf.Dev)), nil
+		return int(major(uint64(buf.Dev))), int(minor(uint64(buf.Dev))), nil
 	} else {
 		return 0, 0, fmt.Errorf("%s is not a block device", mount.Source)
 	}
