#!/bin/sh /etc/rc.common
# Copyright (C) 2014 Noah Meyerhans <frodo@morgul.net>
# Licensed under the terms of the GNU General Public License version 2
# or (at your discretion) any later later version

USE_PROCD=1

START=80

#config_file=/etc/lxd/lxd.conf
#pid_file=/var/run/lxd/lxd.pid

log_dir=/var/log/lxd/
#cachedir=/var/cache/lxd
lib_dir=/var/lib/lxd
lxd_dir=/srv/lxd
lxd_bin=/usr/sbin/lxd
user_grp=lxd

fix_perms() {
    for dir in $lxd_dir $log_dir $lib_dir; do
	test -e "$dir" || {
            mkdir -p "$dir"
            chgrp $user_grp "$dir"
            chmod g+w "$dir"
	}
    done
    ln -sf $lxd_dir/unix.socket $lib_dir/unix.socket
}

start_service() {
    logger -t "lxd" "Starting service LXD ..."
    user_exists $user_grp 200 || user_add $user_grp 200
    group_exists $user_grp 200 || group_add $user_grp 200
    fix_perms
    procd_open_instance
    # Binary "named": flag "-u" not working with threads
    # and disabled capabilities
    # HINT: OpenWRT kernel has capabilities enabled but
    # filesystems are not built with extended attributes
    # (needed by capabilities) by default
    # => Therefore: Workaround with procd_set_param user :-)
    #procd_set_param command /usr/sbin/named -u bind -f -c $config_file
    #procd_set_param user $user_grp
    procd_set_param command $lxd_bin --group $user_grp --logfile=$log_dir/lxd.log
    procd_set_param env LXD_DIR=$lxd_dir
    # procd_set_param env LXD_DIR=$lxd_dir LXD_SECURITY_APPARMOR=false
    # NPROC limit only works when run by non-root user
    # procd_set_param limits nproc="4"
    # procd_set_param limits core="unlimited"
    # procd_set_param stdout 1 # forward stdout of the command to logd
    # procd_set_param stderr 1 # forward stderr to logd
    # write a pid file on instance start (remove stop)
    # procd_set_param pidfile /var/run/lxd/lxd.pid 
    procd_set_param respawn
    procd_close_instance
}

stop_service() {
  for i in `ls /sys/class/net/ |grep lxdbr`; do
    lxdbr_pid=`cat $lxd_dir/networks/$i/dnsmasq.pid`
    if [ -n $lxdbr_pid ]; then
      logger -t "lxd-bridge[$i]" "Stopping associated dnsmasq service for by LXD managed bridge"
      logger -t "dnsmasq[$lxdbr_pid]" "Stop dnsmasq for interface $i"
      kill -SIGKILL $lxdbr_pid &> /dev/null
    fi
  done
  logger -t "lxd" "Shutting down ..."
  if [ -L $lib_dir/unix.socket ]; then
    logger -t "lxd" "Remove symbolic link $lib_dir/unix.socket for $lxd_dir/unix.socket"
    rm $lib_dir/unix.socket
  fi
}
